[{"C:\\Jordan\\shokart\\src\\index.js":"1","C:\\Jordan\\shokart\\src\\App.js":"2","C:\\Jordan\\shokart\\src\\store\\CartProvider.js":"3","C:\\Jordan\\shokart\\src\\components\\Layout\\Header.js":"4","C:\\Jordan\\shokart\\src\\components\\Meals\\Meals.js":"5","C:\\Jordan\\shokart\\src\\components\\Cart\\Cart.js":"6","C:\\Jordan\\shokart\\src\\store\\cart-context.js":"7","C:\\Jordan\\shokart\\src\\components\\Meals\\MealsSummary.js":"8","C:\\Jordan\\shokart\\src\\components\\Layout\\HeaderCartButton.js":"9","C:\\Jordan\\shokart\\src\\components\\Cart\\CartItem.js":"10","C:\\Jordan\\shokart\\src\\components\\Meals\\AvailableMeals.js":"11","C:\\Jordan\\shokart\\src\\components\\UI\\Modal.js":"12","C:\\Jordan\\shokart\\src\\components\\UI\\Card.js":"13","C:\\Jordan\\shokart\\src\\components\\Cart\\CartIcon.js":"14","C:\\Jordan\\shokart\\src\\components\\Meals\\MealItem\\MealItem.js":"15","C:\\Jordan\\shokart\\src\\components\\Meals\\MealItem\\MealItemForm.js":"16","C:\\Jordan\\shokart\\src\\components\\UI\\Input.js":"17","C:\\Jordan\\shokart\\src\\components\\login\\AuthForm.js":"18","C:\\Jordan\\shokart\\src\\store\\auth-context.js":"19","C:\\Jordan\\shokart\\src\\components\\Orders\\Orders.js":"20","C:\\Jordan\\shokart\\src\\components\\Orders\\OrderItem.js":"21","C:\\Jordan\\shokart\\src\\components\\Allorders\\AllOrders.js":"22","C:\\Jordan\\shokart\\src\\components\\Allorders\\OrderItem.js":"23","C:\\Jordan\\shokart\\src\\components\\AddProduct\\AddProduct.js":"24"},{"size":346,"mtime":1629712234816,"results":"25","hashOfConfig":"26"},{"size":2830,"mtime":1630306054507,"results":"27","hashOfConfig":"26"},{"size":2398,"mtime":1629734079037,"results":"28","hashOfConfig":"26"},{"size":2018,"mtime":1629968017472,"results":"29","hashOfConfig":"26"},{"size":269,"mtime":1619484420000,"results":"30","hashOfConfig":"26"},{"size":2195,"mtime":1630308271403,"results":"31","hashOfConfig":"26"},{"size":202,"mtime":1629734064696,"results":"32","hashOfConfig":"26"},{"size":232,"mtime":1629966796472,"results":"33","hashOfConfig":"26"},{"size":1122,"mtime":1629523279378,"results":"34","hashOfConfig":"26"},{"size":612,"mtime":1619484420000,"results":"35","hashOfConfig":"26"},{"size":1515,"mtime":1629972465545,"results":"36","hashOfConfig":"26"},{"size":738,"mtime":1619484420000,"results":"37","hashOfConfig":"26"},{"size":152,"mtime":1619484420000,"results":"38","hashOfConfig":"26"},{"size":488,"mtime":1619484420000,"results":"39","hashOfConfig":"26"},{"size":1107,"mtime":1630305085831,"results":"40","hashOfConfig":"26"},{"size":1124,"mtime":1630057289806,"results":"41","hashOfConfig":"26"},{"size":313,"mtime":1619484420000,"results":"42","hashOfConfig":"26"},{"size":7975,"mtime":1630048191909,"results":"43","hashOfConfig":"26"},{"size":1066,"mtime":1629821749306,"results":"44","hashOfConfig":"26"},{"size":3193,"mtime":1630304148942,"results":"45","hashOfConfig":"26"},{"size":2331,"mtime":1629903830405,"results":"46","hashOfConfig":"26"},{"size":3024,"mtime":1630047035386,"results":"47","hashOfConfig":"26"},{"size":4636,"mtime":1630049936480,"results":"48","hashOfConfig":"26"},{"size":3855,"mtime":1630049335832,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"n5mh78",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},"C:\\Jordan\\shokart\\src\\index.js",[],["108","109"],"C:\\Jordan\\shokart\\src\\App.js",[],"C:\\Jordan\\shokart\\src\\store\\CartProvider.js",[],"C:\\Jordan\\shokart\\src\\components\\Layout\\Header.js",["110","111","112","113","114","115","116","117"],"import { Fragment, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport HeaderCartButton from \"./HeaderCartButton\";\nimport shopping from \"../../assets/discount.jpg\";\nimport image from \"../../assets/os.jpg\";\nimport classes from \"./Header.module.css\";\nimport { Route, useHistory} from \"react-router-dom\";\nimport Orders from \"../Orders/Orders\";\nconst Header = (props) => {\n  const authCtx = useContext(AuthContext);\n\n  const logoutHandler = () => {\n    authCtx.logout();\n  };\n  \n  const history = useHistory();\n\n  const homeHandler = () => {\n    if(authCtx.user.role=='customer'){\n    history.push(\"/customer\");}\n    else{\n      history.push(\"/admin\");\n    }\n };\n\n const addProductHandler = () => {\n  history.push(\"/admin/addproduct\");\n};\n  const myOrders = () => {\n    \n     history.push(\"/customer/orders\");\n  };\n  return (\n    <Fragment>\n      <header className={classes.header}>\n        <h1 onClick={homeHandler}>oKart</h1>\n         <button\n          align=\"right\"\n          onClick={homeHandler}\n          className={classes.button}\n        >\n         Home\n        </button>\n        {authCtx.user.role=='customer' && <button align=\"right\" onClick={myOrders} className={classes.button}>\n          Orders\n        </button>}\n        {authCtx.user.role=='admin' && <button className={classes.button} onClick={addProductHandler}>Add Product</button>}\n        {authCtx.user.role=='customer' && <HeaderCartButton onClick={props.onShowCart} />}\n        <button\n          align=\"right\"\n          onClick={logoutHandler}\n          className={classes.button}\n        >\n          Logout\n        </button>\n      </header>\n     {authCtx.user.role=='customer' && <div className={classes[\"main-image\"]}>\n        <img src={shopping} alt=\"A table full of delicious food!\" />\n      </div>}\n      {authCtx.user.role=='admin' && <div className={classes[\"main-image\"]}>\n        <img src={image} alt=\"A table full of delicious food!\" />\n      </div>}\n      \n    </Fragment>\n  );\n};\n\nexport default Header;\n","C:\\Jordan\\shokart\\src\\components\\Meals\\Meals.js",[],"C:\\Jordan\\shokart\\src\\components\\Cart\\Cart.js",["118"],"import { useContext,useState } from \"react\";\n\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport AuthContext from \"../../store/auth-context\";\nconst Cart = (props) => {\n  const cartCtx = useContext(CartContext);\n  const authCtx = useContext(AuthContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n \n \n  async function checkoutHandler() {\n   \n    for (var i = 0; i < cartCtx.items.length; i++) {\n     await fetch(\"http://localhost:8080/api/orders\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: authCtx.user.username,\n          productId: cartCtx.items[i].id,\n          quantity: cartCtx.items[i].amount,\n          status: \"placed\",\n        }),\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    \n\n      \n    }\n   \n    props.onClose();\n    cartCtx.clear();\n    \n  }\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  return (\n    \n\n    <Modal onClose={props.onCancel}>\n      \n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Price</span>\n        <span>{totalAmount}</span>\n      </div>\n      <div className={classes.actions}>\n        <button className={classes[\"button--alt\"]} onClick={props.onCancel}>\n          Close\n        </button>\n        {hasItems && (\n          <button onClick={checkoutHandler} className={classes.button}>\n             Order Now\n          </button>\n        )}\n      </div>\n    </Modal>\n    \n  );\n};\n\nexport default Cart;\n","C:\\Jordan\\shokart\\src\\store\\cart-context.js",[],"C:\\Jordan\\shokart\\src\\components\\Meals\\MealsSummary.js",[],"C:\\Jordan\\shokart\\src\\components\\Layout\\HeaderCartButton.js",[],"C:\\Jordan\\shokart\\src\\components\\Cart\\CartItem.js",[],"C:\\Jordan\\shokart\\src\\components\\Meals\\AvailableMeals.js",[],"C:\\Jordan\\shokart\\src\\components\\UI\\Modal.js",[],"C:\\Jordan\\shokart\\src\\components\\UI\\Card.js",[],"C:\\Jordan\\shokart\\src\\components\\Cart\\CartIcon.js",[],"C:\\Jordan\\shokart\\src\\components\\Meals\\MealItem\\MealItem.js",["119"],"import { useContext } from 'react';\n\nimport MealItemForm from './MealItemForm';\nimport classes from './MealItem.module.css';\nimport CartContext from '../../../store/cart-context';\n\nconst MealItem = (props) => {\n  const cartCtx = useContext(CartContext);\n\n  const price = `$${props.price.toFixed(2)}`;\n\n  const addToCartHandler = amount => {\n    cartCtx.addItem({\n      id: props.id,\n      name: props.name,\n      amount: amount,\n      price: props.price\n    });\n  };\n  const getImageSrc = (byteArray) => {\n    var img = null;\n    if (byteArray != null) img = new Buffer.from(byteArray).toString(\"base64\");\n    const file = \"data:image/jpeg;base64,\" + img;\n    return file;\n  };\n  \n  return (\n    <li className={classes.meal}>\n      <div>\n        <h3 align=\"center\" >{props.name}</h3><br />\n        <img className={classes.img} width=\"300\" height=\"300\" src={getImageSrc(props.pic)} />\n        \n        <div className={classes.price}>{price}</div>\n        \n      </div>\n      <div>\n        <MealItemForm id={props.id} onAddToCart={addToCartHandler} />\n      </div>\n    </li>\n  );\n};\n\nexport default MealItem;\n","C:\\Jordan\\shokart\\src\\components\\Meals\\MealItem\\MealItemForm.js",[],"C:\\Jordan\\shokart\\src\\components\\UI\\Input.js",[],"C:\\Jordan\\shokart\\src\\components\\login\\AuthForm.js",["120"],"import { useState, useRef, useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AuthForm.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst AuthForm = () => {\r\n  const usernameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const firstNameInputRef = useRef();\r\n  const lastNameInputRef = useRef();\r\n  const houseInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const stateInputRef = useRef();\r\n  const pincodeInputRef = useRef();\r\n  const phoneInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showCustomMessage, setCustomMessage] = useState(false);\r\n  const [registered, setRegistered] = useState(false);\r\n\r\n  const showModalHandler = () => {\r\n    setShowModal(true);\r\n  };\r\n  const hideModalHandler = () => {\r\n    setShowModal(false);\r\n    setRegistered(false);\r\n    setCustomMessage(false);\r\n  };\r\n\r\n  const registrationHandler = () => {\r\n    setShowModal(true);\r\n    setIsLogin((prevState) => !prevState);\r\n    setCustomMessage(true);\r\n  };\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredUsername = usernameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    // optional: Add validation\r\n\r\n    if (isLogin) {\r\n      fetch(\"http://localhost:8080/api/users/login\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify({\r\n          username: enteredUsername,\r\n          password: enteredPassword,\r\n        }),\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          res.json().then((data) => {\r\n            console.log(data);\r\n            authCtx.login(data);\r\n            const role = data.role;\r\n            if (role === \"customer\") {\r\n              history.replace(\"/customer\");\r\n            } else {\r\n              history.replace(\"/admin\");\r\n            }\r\n          });\r\n        } else {\r\n          setShowModal(true);\r\n        }\r\n      });\r\n    } else {\r\n      const enteredFirstName = firstNameInputRef.current.value;\r\n      const enteredLastName = lastNameInputRef.current.value;\r\n      const enteredHouse = houseInputRef.current.value;\r\n      const enteredStreet = streetInputRef.current.value;\r\n      const enteredCity = cityInputRef.current.value;\r\n      const enteredState = stateInputRef.current.value;\r\n      const enteredPincode = pincodeInputRef.current.value;\r\n      const enteredPhone = phoneInputRef.current.value;\r\n      fetch(\"http://localhost:8080/api/users\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify({\r\n          username: enteredUsername,\r\n          password: enteredPassword,\r\n          firstName: enteredFirstName,\r\n          lastName: enteredLastName,\r\n          houseNo: enteredHouse,\r\n          street: enteredStreet,\r\n          city: enteredCity,\r\n          state: enteredState,\r\n          pincode: enteredPincode,\r\n          phone: enteredPhone,\r\n          role: \"customer\",\r\n        }),\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          setShowModal(true);\r\n          setRegistered(true);\r\n        } else {\r\n          setShowModal(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.back}>\r\n      \r\n      <section className={classes.auth}>\r\n      {showModal && (\r\n        <Modal onClose={hideModalHandler}>\r\n          {isLogin && showCustomMessage && <h3 className={classes.h3}>Successfully Registered</h3>}\r\n          {isLogin && !showCustomMessage && <h3 className={classes.h3}>Username and password incorrect</h3>}\r\n          {!isLogin && !registered && <h3  className={classes.h3}>Username already exists</h3>}\r\n          {!isLogin && registered && <h3  className={classes.h3}>Successfully registered</h3> && registrationHandler() }\r\n          <button onClick={hideModalHandler} className={classes.button}>\r\n            OK\r\n          </button>\r\n        </Modal>\r\n      )}\r\n        <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n        <h3>* indicates madatory fields</h3>\r\n        <form onSubmit={submitHandler}>\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"email\">\r\n              Username{\" \"}\r\n            </label>\r\n            <input type=\"text\" id=\"email\" required ref={usernameInputRef} />\r\n          </div>\r\n\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={passwordInputRef}\r\n            />\r\n          </div>\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"firstname\">First Name</label>\r\n              <input type=\"text\" id=\"firstname\" ref={firstNameInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"lastname\">Last Name</label>\r\n              <input type=\"text\" id=\"lastname\" ref={lastNameInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"house\">\r\n                House Number\r\n              </label>\r\n              <input type=\"text\" id=\"house\" required ref={houseInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"street\">\r\n                Street\r\n              </label>\r\n              <input type=\"text\" id=\"street\" required ref={streetInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"city\">\r\n                City\r\n              </label>\r\n              <input type=\"text\" id=\"city\" required ref={cityInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"state\">\r\n                State\r\n              </label>\r\n              <input type=\"text\" id=\"state\" required ref={stateInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"pincode\">\r\n                Pincode\r\n              </label>\r\n              <input type=\"text\" id=\"pincode\" required ref={pincodeInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"phone\">\r\n                Phone\r\n              </label>\r\n              <input type=\"text\" id=\"phone\" required ref={phoneInputRef} />\r\n            </div>\r\n          )}\r\n          <div className={classes.actions}>\r\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n            <button\r\n              type=\"button\"\r\n              className={classes.toggle}\r\n              onClick={switchAuthModeHandler}\r\n            >\r\n              {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","C:\\Jordan\\shokart\\src\\store\\auth-context.js",[],"C:\\Jordan\\shokart\\src\\components\\Orders\\Orders.js",["121"],"import AuthContext from \"../../store/auth-context\";\r\nimport Card from \"../UI/Card\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filter, setfilter] = useState(\"orderid\");\r\n  const [searchOrder, setSearchOrder] = useState(\"\");\r\n  const [statusChanged, setStatusChanged] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n  const changeStatusHandler = () => {\r\n    setStatusChanged(true);\r\n  };\r\n  const searchHandler = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const filterHandler = (event) => {\r\n    setfilter(event.target.value);\r\n  };\r\n  const searchOrderHandler = (event) => {\r\n    setSearchOrder(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/api/orders/myorders\",\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          body: JSON.stringify({\r\n            username: authCtx.user.username,\r\n            password: authCtx.user.password,\r\n          }),\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      setOrders(responseData);\r\n    };\r\n    fetchOrders();\r\n    setStatusChanged(false);\r\n  }, [statusChanged]);\r\n  let filteredOrders;\r\n  if(filter==='status'){\r\n   filteredOrders =\r\n    search.length === 0\r\n      ? orders\r\n      : orders.filter((order) =>\r\n          order.status.toLowerCase().includes(search.toLowerCase())\r\n        );}\r\n   else {filteredOrders =\r\n        searchOrder.length === 0\r\n          ? orders\r\n          : orders.filter((order) =>\r\n              order.id===Number(searchOrder)\r\n            );}\r\n\r\n  const OrdersList = filteredOrders.map((order) => (\r\n    <OrderItem\r\n      search={search}\r\n      change={changeStatusHandler}\r\n      key={order.id}\r\n      id={order.id}\r\n      username={order.username}\r\n      productId={order.productId}\r\n      quantity={order.quantity}\r\n      status={order.status}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      \r\n      <h1 className={classes.h1}>Filter Orders</h1>\r\n      <select id=\"dropFilter\" onChange={filterHandler} className={classes.button}>\r\n        <option value=\"orderid\" >Order Id</option>\r\n        <option value=\"status\" >Status</option>\r\n      </select>\r\n      {filter==='status' &&  <input\r\n        className={classes.button}\r\n        placeholder=\"Search with order status\"\r\n        type=\"text\"\r\n        value={search}\r\n        onChange={searchHandler}\r\n      /> }\r\n       {filter==='orderid'  && <input\r\n        className={classes.button}\r\n        placeholder=\"Search with order id\"\r\n        type=\"text\"\r\n        value={searchOrder}\r\n        onChange={searchOrderHandler}\r\n      />}\r\n     \r\n\r\n      <Card>\r\n        <ul>{OrdersList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","C:\\Jordan\\shokart\\src\\components\\Orders\\OrderItem.js",["122","123","124"],"import { useContext,useState,useEffect } from 'react';\n\nimport classes from './MealItem.module.css';\n\n\nconst OrderItem = (props) => {\n \n  const [product, setProduct] = useState([]);\n  \n  useEffect(() => {\n    const fetchProduct = async () => {\n      const pId= Number(props.productId);\n      const response = await fetch('http://localhost:8080/api/products/' + pId,{\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const responseData = await response.json();\n       console.log(responseData);\n      setProduct(responseData);\n      \n    };\n\n    fetchProduct();\n  }, []);\n\n \n\n  const clickHandler = () => {\n\n\n    const changeStatus = async () => {\n      const response = await fetch('http://localhost:8080/api/orders/status',{\n        method: \"POST\",\n        body: JSON.stringify({\n          id: props.id,\n          status: 'Cancelled',\n         \n        }),\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const responseData = await response.json();\n      \n      console.log(responseData);\n      \n    };\n\n    changeStatus();\n    props.change();\n  };\n  const getImageSrc = (byteArray) => {\n    var img = null;\n    if (byteArray != null) img = new Buffer.from(byteArray).toString(\"base64\");\n    const file = \"data:image/jpeg;base64,\" + img;\n    return file;\n  };\n  let showCancelButton= false;\n  if(props.status==='placed'){\n    showCancelButton= true;\n  }\n  \n  return (\n    <li className={classes.meal}>\n      <div>\n        <div className={classes.price}>Order Id- {props.id}</div>\n        <div className={classes.price}>{product.name}</div><br />\n        <img  className={classes.image} width=\"300\" height=\"300\" src={getImageSrc(product.pic)} /><br />\n        <div className={classes.description}>Amount x {props.quantity}</div>\n        <div className={classes.description}>Status - {props.status}</div>\n        <div className={classes.description}>Price - $ {product.price * props.quantity}</div><br />\n        {showCancelButton && <button align=\"right\" className={classes.button} onClick={clickHandler}>Cancel Item</button>}\n      </div>\n    </li>\n  );\n};\n\nexport default OrderItem;\n","C:\\Jordan\\shokart\\src\\components\\Allorders\\AllOrders.js",["125","126","127","128","129","130","131","132","133"],"import AuthContext from \"../../store/auth-context\";\r\nimport Card from \"../UI/Card\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport LazyLoad from \"react-lazyload\";\r\n\r\nconst AllOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [filter, setfilter] = useState(\"status\");\r\n  const [searchStatus, setSearchStatus] = useState('');\r\n \r\n  const [statusChanged, setStatusChanged] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n  const searchHandler = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const changeStatusHandler = (temp) => {\r\n    setStatusChanged(temp);\r\n  };\r\n  const filterHandler = (event) => {\r\n    setfilter(event.target.value);\r\n  };\r\n  const searchStatusHandler = (event) => {\r\n    setSearchStatus(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const response = await fetch(\"http://localhost:8080/api/orders\", {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      setOrders(responseData);\r\n    };\r\n    fetchOrders();\r\n    setStatusChanged(false);\r\n  }, [statusChanged]);\r\n  \r\n  const placedOrders = orders.filter(\r\n    (order) => order.status == \"placed\" || order.status == \"Shipped\" || order.status == \"Rejected\"\r\n  );\r\n\r\n \r\n  let filteredOrders =  search.length === 0 ? placedOrders : placedOrders.filter(\r\n      (order) => order.username.toLowerCase().includes(search.toLowerCase())\r\n             );\r\n\r\n  //const filteredOrders =  search.length === 0 ? placedOrders : placedOrders.filter(\r\n    //(order) => order.username.toLowerCase().includes(search.toLowerCase())\r\n  //);\r\n  function compare_item(a, b) {\r\n    // a should come before b in the sorted order\r\n    if (a.username < b.username) {\r\n      return -1;\r\n      // a should come after b in the sorted order\r\n    } else if (a.username > b.username) {\r\n      return 1;\r\n      // and and b are the same\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  filteredOrders.sort(compare_item);\r\n  const OrdersList = filteredOrders.map((order) => (\r\n    <OrderItem\r\n      change={changeStatusHandler}\r\n      key={order.id}\r\n      id={order.id}\r\n      username={order.username}\r\n      productId={order.productId}\r\n      quantity={order.quantity}\r\n      status={order.status}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n    \r\n      <input\r\n        className={classes.button}\r\n        placeholder=\"Search Orders with customer id...\"\r\n        type=\"text\"\r\n        value={search}\r\n        onChange={searchHandler}\r\n      /> \r\n      \r\n     \r\n       \r\n      <Card>\r\n        <ul>{OrdersList}</ul>\r\n      </Card>\r\n    \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AllOrders;\r\n","C:\\Jordan\\shokart\\src\\components\\Allorders\\OrderItem.js",["134","135","136","137","138"],"import { useContext, useState, useEffect } from \"react\";\nimport LazyLoad from \"react-lazyload\";\nimport classes from \"./MealItem.module.css\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst OrderItem = (props) => {\n  const [product, setProduct] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      const pId = Number(props.productId);\n      const response = await fetch(\n        \"http://localhost:8080/api/products/\" + pId,\n        {\n          method: \"GET\",\n          mode: \"cors\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const responseData = await response.json();\n      console.log(responseData);\n      setProduct(responseData);\n    };\n\n    fetchProduct();\n  }, []);\n\n  useEffect(() => {\n    const fetchCustomer = async () => {\n      const response = await fetch(\n        \"http://localhost:8080/api/users/getbyusername\",\n        {\n          method: \"POST\",\n          mode: \"cors\",\n          body: JSON.stringify({\n            username: props.username,\n          }),\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const responseData = await response.json();\n      console.log(responseData);\n      setCustomer(responseData);\n    };\n\n    fetchCustomer();\n  }, []);\n\n  const clickHandlerShip = () => {\n    const changeStatus = async () => {\n      const response = await fetch(\"http://localhost:8080/api/orders/status\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: props.id,\n          status: \"Shipped\",\n        }),\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const responseData = await response.json();\n\n      console.log(responseData);\n    };\n\n    changeStatus();\n    props.change(true);\n  };\n\n  const clickHandlerReject = () => {\n    const changeStatus = async () => {\n      const response = await fetch(\"http://localhost:8080/api/orders/status\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: props.id,\n          status: \"Rejected\",\n        }),\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const responseData = await response.json();\n\n      console.log(responseData);\n    };\n\n    changeStatus();\n    props.change(true);\n  };\n\n  const getImageSrc = (byteArray) => {\n    var img = null;\n    if (byteArray != null) img = new Buffer.from(byteArray).toString(\"base64\");\n    const file = \"data:image/jpeg;base64,\" + img;\n    return file;\n  };\n  let showShipButton = false;\n  if (props.status === \"placed\") {\n    showShipButton = true;\n  }\n  let showRejectButton = false;\n  if (props.status === \"placed\") {\n    showRejectButton = true;\n  }\n  let ShippingAdd = customer.houseNo + \",\" + customer.street;\n  let cont = customer.city + \",\" + customer.state + \",\" + customer.pincode;\n  return (\n    <li className={classes.meal}>\n      <div>\n        <h1 className={classes.description}>\n          Id-\n          {props.username}\n        </h1>\n\n        <div align=\"left\" className={classes.price}>\n          Shipping Address -\n          {ShippingAdd}\n          <br />\n          {cont} <br />\n          \n          Contact - {customer.phone}\n        </div>\n        <h1>Item Details</h1>\n        <div align=\"left\" className={classes.price}>\n          {product.name}\n        </div>\n        <br />\n        <img\n          className={classes.image}\n          width=\"100\"\n          height=\"100\"\n          src={getImageSrc(product.pic)}\n        />\n        <br />\n        <div className={classes.price}>Amount x {props.quantity}</div>\n        <div className={classes.price}>Status - {props.status}</div>\n        <div className={classes.price}>\n          Price - $ {product.price * props.quantity}\n        </div>\n        <br />\n        {showShipButton && (\n          <button\n            align=\"right\"\n            className={classes.button}\n            onClick={clickHandlerShip}\n          >\n            Ship Order\n          </button>\n        )}\n        {showRejectButton && (\n          <button\n            align=\"center\"\n            className={classes.button}\n            onClick={clickHandlerReject}\n          >\n            Reject Order\n          </button>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default OrderItem;\n","C:\\Jordan\\shokart\\src\\components\\AddProduct\\AddProduct.js",["139","140","141","142"],"import { useState, useRef, useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AuthForm.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"../UI/Modal\";\r\nconst AddProduct = () => {\r\n  const picInputRef = useRef();\r\n  const nameInputRef = useRef();\r\n  const descriptionInputRef = useRef();\r\n  const priceInputRef = useRef();\r\n  const quantityInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [image,setImage]=useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const changeHandler=(event)=>{\r\n    setImage(event.target.files[0]);\r\n  }\r\n  const hideModalHandler = () => {\r\n    setShowModal(false);\r\n    \r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n  \r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredDescription = descriptionInputRef.current.value;\r\n    const enteredPrice = priceInputRef.current.value;\r\n\r\n    const enteredQuantity = quantityInputRef.current.value;\r\n    // optional: Add validation\r\n  \r\n    const formData  = new FormData();\r\n    formData.append('pic',image);\r\n    formData.append('name',enteredName);\r\n    formData.append('description',enteredDescription);\r\n    formData.append('price',enteredPrice);\r\n    formData.append('quantity',enteredQuantity);\r\n    \r\n\r\n    const AddNewProduct = async () => {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/api/products\",\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          body: formData,\r\n         \r\n        }\r\n      );\r\n      const responseData = await response.json();\r\n      \r\n      setShowModal(true);\r\n      \r\n    };\r\n    AddNewProduct();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.back}>\r\n      <section className={classes.auth}>\r\n      {showModal && (\r\n        <Modal onClose={hideModalHandler}>\r\n        \r\n          <h3  className={classes.h3}>Product added</h3>\r\n          <button onClick={hideModalHandler} className={classes.button}>\r\n            OK\r\n          </button>\r\n        </Modal>\r\n      )}\r\n        <h1>Product Details</h1>\r\n        <form onSubmit={submitHandler}>\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"pic\">Pic</label>\r\n            <input type=\"file\" id=\"pic\" required  onChange={changeHandler} />\r\n          </div>\r\n\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              required\r\n              ref={nameInputRef}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"description\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"description\"\r\n              required\r\n              ref={descriptionInputRef}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"price\">Price</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"price\"\r\n              required\r\n              ref={priceInputRef}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"quantity\">Amount available</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"quantity\"\r\n              required\r\n              ref={quantityInputRef}\r\n            />\r\n          </div>\r\n          \r\n          <div className={classes.actions}>\r\n          <button type=\"submit\">Submit</button>\r\n          \r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":15},{"ruleId":"147","severity":1,"message":"151","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":19,"column":25,"nodeType":"154","messageId":"155","endLine":19,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":44,"column":27,"nodeType":"154","messageId":"155","endLine":44,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":47,"column":27,"nodeType":"154","messageId":"155","endLine":47,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":48,"column":27,"nodeType":"154","messageId":"155","endLine":48,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":57,"column":24,"nodeType":"154","messageId":"155","endLine":57,"endColumn":26},{"ruleId":"152","severity":1,"message":"153","line":60,"column":25,"nodeType":"154","messageId":"155","endLine":60,"endColumn":27},{"ruleId":"147","severity":1,"message":"156","line":1,"column":21,"nodeType":"149","messageId":"150","endLine":1,"endColumn":29},{"ruleId":"157","severity":1,"message":"158","line":31,"column":9,"nodeType":"159","endLine":31,"endColumn":94},{"ruleId":"147","severity":1,"message":"160","line":25,"column":9,"nodeType":"149","messageId":"150","endLine":25,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":49,"column":6,"nodeType":"163","endLine":49,"endColumn":21,"suggestions":"164"},{"ruleId":"147","severity":1,"message":"165","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":20},{"ruleId":"161","severity":1,"message":"166","line":28,"column":6,"nodeType":"163","endLine":28,"endColumn":8,"suggestions":"167"},{"ruleId":"157","severity":1,"message":"158","line":74,"column":9,"nodeType":"159","endLine":74,"endColumn":99},{"ruleId":"147","severity":1,"message":"168","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"169","line":11,"column":10,"nodeType":"149","messageId":"150","endLine":11,"endColumn":16},{"ruleId":"147","severity":1,"message":"170","line":12,"column":10,"nodeType":"149","messageId":"150","endLine":12,"endColumn":22},{"ruleId":"147","severity":1,"message":"171","line":15,"column":9,"nodeType":"149","messageId":"150","endLine":15,"endColumn":16},{"ruleId":"147","severity":1,"message":"172","line":22,"column":9,"nodeType":"149","messageId":"150","endLine":22,"endColumn":22},{"ruleId":"147","severity":1,"message":"173","line":25,"column":9,"nodeType":"149","messageId":"150","endLine":25,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":47,"column":29,"nodeType":"154","messageId":"155","endLine":47,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":47,"column":57,"nodeType":"154","messageId":"155","endLine":47,"endColumn":59},{"ruleId":"152","severity":1,"message":"153","line":47,"column":86,"nodeType":"154","messageId":"155","endLine":47,"endColumn":88},{"ruleId":"147","severity":1,"message":"168","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"171","line":9,"column":9,"nodeType":"149","messageId":"150","endLine":9,"endColumn":16},{"ruleId":"161","severity":1,"message":"166","line":31,"column":6,"nodeType":"163","endLine":31,"endColumn":8,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"175","line":55,"column":6,"nodeType":"163","endLine":55,"endColumn":8,"suggestions":"176"},{"ruleId":"157","severity":1,"message":"158","line":140,"column":9,"nodeType":"159","endLine":145,"endColumn":11},{"ruleId":"147","severity":1,"message":"177","line":7,"column":9,"nodeType":"149","messageId":"150","endLine":7,"endColumn":20},{"ruleId":"147","severity":1,"message":"171","line":13,"column":9,"nodeType":"149","messageId":"150","endLine":13,"endColumn":16},{"ruleId":"147","severity":1,"message":"178","line":14,"column":9,"nodeType":"149","messageId":"150","endLine":14,"endColumn":16},{"ruleId":"147","severity":1,"message":"179","line":52,"column":13,"nodeType":"149","messageId":"150","endLine":52,"endColumn":25},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Orders' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'showModalHandler' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authCtx.user.password' and 'authCtx.user.username'. Either include them or remove the dependency array.","ArrayExpression",["182"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'props.productId'. Either include it or remove the dependency array.",["183"],"'LazyLoad' is defined but never used.","'filter' is assigned a value but never used.","'searchStatus' is assigned a value but never used.","'authCtx' is assigned a value but never used.","'filterHandler' is assigned a value but never used.","'searchStatusHandler' is assigned a value but never used.",["184"],"React Hook useEffect has a missing dependency: 'props.username'. Either include it or remove the dependency array.",["185"],"'picInputRef' is assigned a value but never used.","'history' is assigned a value but never used.","'responseData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [authCtx.user.password, authCtx.user.username, statusChanged]",{"range":"193","text":"194"},"Update the dependencies array to be: [props.productId]",{"range":"195","text":"196"},{"range":"197","text":"196"},"Update the dependencies array to be: [props.username]",{"range":"198","text":"199"},[1576,1591],"[authCtx.user.password, authCtx.user.username, statusChanged]",[700,702],"[props.productId]",[910,912],[1513,1515],"[props.username]"]