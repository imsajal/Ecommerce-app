{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jordan\\\\shokart\\\\src\\\\components\\\\Orders\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport AuthContext from \"../../store/auth-context\";\nimport Card from \"../UI/Card\";\nimport OrderItem from \"./OrderItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filter, setfilter] = useState(\"orderid\");\n  const [searchOrder, setSearchOrder] = useState(\"\");\n  const [statusChanged, setStatusChanged] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  const changeStatusHandler = () => {\n    setStatusChanged(true);\n  };\n\n  const searchHandler = event => {\n    setSearch(event.target.value);\n  };\n\n  const filterHandler = event => {\n    setfilter(event.target.value);\n  };\n\n  const searchOrderHandler = event => {\n    setSearchOrder(event.target.value);\n  };\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const response = await fetch(\"http://localhost:8080/api/orders/myorders\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: authCtx.user.username,\n          password: authCtx.user.password\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      setOrders(responseData);\n    };\n\n    fetchOrders();\n    setStatusChanged(false);\n  }, [statusChanged]);\n  let filteredOrders;\n\n  if (filter === 'status') {\n    filteredOrders = search.length === 0 ? orders : orders.filter(order => order.status.toLowerCase().includes(search.toLowerCase()));\n  } else {\n    filteredOrders = searchOrder.length === 0 ? orders : orders.filter(order => order.id === Number(searchOrder));\n  }\n\n  const OrdersList = filteredOrders.map(order => /*#__PURE__*/_jsxDEV(OrderItem, {\n    search: search,\n    change: changeStatusHandler,\n    id: order.id,\n    username: order.username,\n    productId: order.productId,\n    quantity: order.quantity,\n    status: order.status\n  }, order.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [filter === 'status' && /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.button,\n      placeholder: \"Search with order status\",\n      type: \"text\",\n      value: search,\n      onChange: searchHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }, this) && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), filter === 'orderid' && /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.button,\n      placeholder: \"Search with order id\",\n      type: \"text\",\n      value: searchOrder,\n      onChange: searchOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"dropFilter\",\n      onChange: filterHandler,\n      className: classes.button,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"orderid\",\n        children: \"Order Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"status\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: OrdersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"vuzYtLJ5hP1mJBwMzoZax25n1vY=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Jordan/shokart/src/components/Orders/Orders.js"],"names":["AuthContext","Card","OrderItem","classes","useEffect","useState","useContext","Orders","orders","setOrders","search","setSearch","filter","setfilter","searchOrder","setSearchOrder","statusChanged","setStatusChanged","authCtx","changeStatusHandler","searchHandler","event","target","value","filterHandler","searchOrderHandler","fetchOrders","response","fetch","method","mode","body","JSON","stringify","username","user","password","headers","responseData","json","console","log","filteredOrders","length","order","status","toLowerCase","includes","id","Number","OrdersList","map","productId","quantity","meals","button"],"mappings":"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","sourcesContent":["import AuthContext from \"../../store/auth-context\";\r\nimport Card from \"../UI/Card\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filter, setfilter] = useState(\"orderid\");\r\n  const [searchOrder, setSearchOrder] = useState(\"\");\r\n  const [statusChanged, setStatusChanged] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n  const changeStatusHandler = () => {\r\n    setStatusChanged(true);\r\n  };\r\n  const searchHandler = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const filterHandler = (event) => {\r\n    setfilter(event.target.value);\r\n  };\r\n  const searchOrderHandler = (event) => {\r\n    setSearchOrder(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/api/orders/myorders\",\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          body: JSON.stringify({\r\n            username: authCtx.user.username,\r\n            password: authCtx.user.password,\r\n          }),\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      setOrders(responseData);\r\n    };\r\n    fetchOrders();\r\n    setStatusChanged(false);\r\n  }, [statusChanged]);\r\n  let filteredOrders;\r\n  if(filter==='status'){\r\n   filteredOrders =\r\n    search.length === 0\r\n      ? orders\r\n      : orders.filter((order) =>\r\n          order.status.toLowerCase().includes(search.toLowerCase())\r\n        );}\r\n   else {filteredOrders =\r\n        searchOrder.length === 0\r\n          ? orders\r\n          : orders.filter((order) =>\r\n              order.id===Number(searchOrder)\r\n            );}\r\n\r\n  const OrdersList = filteredOrders.map((order) => (\r\n    <OrderItem\r\n      search={search}\r\n      change={changeStatusHandler}\r\n      key={order.id}\r\n      id={order.id}\r\n      username={order.username}\r\n      productId={order.productId}\r\n      quantity={order.quantity}\r\n      status={order.status}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      \r\n      \r\n      {filter==='status' && <input\r\n        className={classes.button}\r\n        placeholder=\"Search with order status\"\r\n        type=\"text\"\r\n        value={search}\r\n        onChange={searchHandler}\r\n      /> && <h1>Filters</h1>}\r\n       {filter==='orderid'  && <input\r\n        className={classes.button}\r\n        placeholder=\"Search with order id\"\r\n        type=\"text\"\r\n        value={searchOrder}\r\n        onChange={searchOrderHandler}\r\n      />}\r\n      <select id=\"dropFilter\" onChange={filterHandler} className={classes.button}>\r\n        <option value=\"orderid\" >Order Id</option>\r\n        <option value=\"status\" >Status</option>\r\n      </select>\r\n\r\n      <Card>\r\n        <ul>{OrdersList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"]},"metadata":{},"sourceType":"module"}