{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jordan\\\\shokart\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('http://localhost:8080/api/products', {\n        method: \"GET\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: enteredUsername,\n          password: enteredPassword\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key.id,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    };\n\n    fetchMeals();\n  }, []);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"an3554G5PYiaii/PlvHt6YA7hZs=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Jordan/shokart/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","fetchMeals","response","fetch","method","mode","body","JSON","stringify","username","enteredUsername","password","enteredPassword","headers","responseData","json","loadedMeals","key","push","id","name","description","price","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAsC;AAChEC,QAAAA,MAAM,EAAE,KADwD;AAEhEC,QAAAA,IAAI,EAAE,MAF0D;AAGhEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,QAAQ,EAAEC,eADS;AAEnBC,UAAAA,QAAQ,EAAEC;AAFS,SAAf,CAH0D;AAOhEC,QAAAA,OAAO,EAAE;AACP,yCAA+B,GADxB;AAEP,0BAAgB;AAFT;AAPuD,OAAtC,CAA5B;AAYA,YAAMC,YAAY,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GAAG,CAACE,EADO;AAEfC,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AAEDtB,MAAAA,QAAQ,CAACgB,WAAD,CAAR;AACD,KA3BD;;AA6BAf,IAAAA,UAAU;AACX,GA/BQ,EA+BN,EA/BM,CAAT;AAiCA,QAAMsB,SAAS,GAAGxB,KAAK,CAACyB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACN,EAFX;AAGE,IAAA,IAAI,EAAEM,IAAI,CAACL,IAHb;AAIE,IAAA,WAAW,EAAEK,IAAI,CAACJ,WAJpB;AAKE,IAAA,KAAK,EAAEI,IAAI,CAACH;AALd,KACOG,IAAI,CAACN,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAExB,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKwB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtDD;;GAAMzB,c;;KAAAA,c;AAwDN,eAAeA,cAAf","sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\n\nconst AvailableMeals = () => {\n\n  const [meals, setMeals] = useState([]);\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('http://localhost:8080/api/products',{\n        method: \"GET\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: enteredUsername,\n          password: enteredPassword,\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key.id,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n    };\n\n    fetchMeals();\n  }, []);\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}