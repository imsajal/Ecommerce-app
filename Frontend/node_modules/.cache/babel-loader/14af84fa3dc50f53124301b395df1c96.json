{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jordan\\\\shokart\\\\src\\\\components\\\\login\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const usernameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const firstNameInputRef = useRef();\n  const lastNameInputRef = useRef();\n  const houseInputRef = useRef();\n  const streetInputRef = useRef();\n  const cityInputRef = useRef();\n  const stateInputRef = useRef();\n  const pincodeInputRef = useRef();\n  const phoneInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredUsername = usernameInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredFirstName = firstNameInputRef.current.value;\n    const enteredLastName = lastNameInputRef.current.value;\n    const enteredHouse = houseInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredState = stateInputRef.current.value;\n    const enteredPincode = pincodeInputRef.current.value;\n    const enteredPhone = phoneInputRef.current.value; // optional: Add validation\n\n    if (isLogin) {} else {\n      fetch('http://localhost:8080/api/users', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: enteredUsername,\n          password: enteredPassword,\n          firstName: enteredFirstName,\n          lastName: enteredLastName,\n          houseNo: enteredHouse,\n          street: enteredStreet,\n          city: enteredCity,\n          state: enteredState,\n          pincode: enteredPincode,\n          phone: enteredPhone,\n          role: \"customer\"\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.ok) {// ...\n        } else {\n          return res.json().then(data => {\n            // show an error modal\n            console.log(data);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.back,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            ref: usernameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstname\",\n            required: true,\n            ref: firstNameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastname\",\n            required: true,\n            ref: lastNameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 22\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"house\",\n            children: \"House Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"house\",\n            required: true,\n            ref: houseInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 22\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"street\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"street\",\n            required: true,\n            ref: streetInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 22\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"city\",\n            required: true,\n            ref: cityInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 22\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"state\",\n            required: true,\n            ref: stateInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 22\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pincode\",\n            children: \"Pincode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pincode\",\n            required: true,\n            ref: pincodeInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 22\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"phone\",\n            required: true,\n            ref: phoneInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: isLogin ? 'Login' : 'Create Account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.toggle,\n            onClick: switchAuthModeHandler,\n            children: isLogin ? 'Create new account' : 'Login with existing account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"0GRrSrhNnYkaLiDpA+kfgo65FIY=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Jordan/shokart/src/components/login/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","usernameInputRef","passwordInputRef","firstNameInputRef","lastNameInputRef","houseInputRef","streetInputRef","cityInputRef","stateInputRef","pincodeInputRef","phoneInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredUsername","current","value","enteredPassword","enteredFirstName","enteredLastName","enteredHouse","enteredStreet","enteredCity","enteredState","enteredPincode","enteredPhone","fetch","method","body","JSON","stringify","username","password","firstName","lastName","houseNo","street","city","state","pincode","phone","role","headers","then","res","ok","json","data","console","log","back","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState,useRef } from 'react';\r\n\r\nimport classes from './AuthForm.module.css';\r\n\r\nconst AuthForm = () => {\r\n\r\n  const usernameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const firstNameInputRef = useRef();\r\n  const lastNameInputRef = useRef();\r\n  const houseInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const stateInputRef = useRef();\r\n  const pincodeInputRef = useRef();\r\n  const phoneInputRef = useRef();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredUsername = usernameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    const enteredFirstName = firstNameInputRef.current.value;\r\n    const enteredLastName = lastNameInputRef.current.value;\r\n    const enteredHouse = houseInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n    const enteredState = stateInputRef.current.value;\r\n    const enteredPincode = pincodeInputRef.current.value;\r\n    const enteredPhone = phoneInputRef.current.value;\r\n\r\n\r\n\r\n    // optional: Add validation\r\n\r\n    if (isLogin) {\r\n    } else {\r\n      fetch(\r\n        'http://localhost:8080/api/users',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            username: enteredUsername,\r\n            password: enteredPassword,\r\n            firstName: enteredFirstName,\r\n            lastName:  enteredLastName,\r\n            houseNo: enteredHouse,\r\n            street: enteredStreet,\r\n            city: enteredCity,\r\n            state: enteredState,\r\n            pincode: enteredPincode,\r\n            phone: enteredPhone,\r\n            role: \"customer\",\r\n\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      ).then((res) => {\r\n        if (res.ok) {\r\n          // ...\r\n          \r\n        } else {\r\n          return res.json().then((data) => {\r\n            // show an error modal\r\n            console.log(data);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div  className={classes.back}>\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='email'>Username</label>\r\n          <input type='email' id='email' required  ref={usernameInputRef}/>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Password</label>\r\n          <input type='password' id='password' required ref={passwordInputRef} />\r\n        </div>\r\n        {!isLogin && <div className={classes.control}>\r\n          <label htmlFor='firstname'>First Name</label>\r\n          <input type='text' id='firstname' required ref={firstNameInputRef} />\r\n        </div>}\r\n        {!isLogin && <div className={classes.control}>\r\n          <label htmlFor='lastname'>Last Name</label>\r\n          <input type='text' id='lastname' required ref={lastNameInputRef}/>\r\n        </div>}\r\n        {!isLogin && <div className={classes.control}>\r\n          <label htmlFor='house'>House Number</label>\r\n          <input type='text' id='house' required ref={houseInputRef}/>\r\n        </div>}\r\n        {!isLogin && <div className={classes.control}>\r\n          <label htmlFor='street'>Street</label>\r\n          <input type='text' id='street' required ref={streetInputRef}/>\r\n        </div>}\r\n        {!isLogin && <div className={classes.control}>\r\n          <label htmlFor='city'>City</label>\r\n          <input type='text' id='city' required ref={cityInputRef}/>\r\n        </div>}\r\n        {!isLogin && <div className={classes.control}>\r\n          <label htmlFor='state'>State</label>\r\n          <input type='text' id='state' required ref={stateInputRef}/>\r\n        </div>}\r\n        {!isLogin && <div className={classes.control}>\r\n          <label htmlFor='pincode'>Pincode</label>\r\n          <input type='text' id='pincode' required ref={pincodeInputRef}/>\r\n        </div>}\r\n        {!isLogin && <div className={classes.control}>\r\n          <label htmlFor='phone'>Phone</label>\r\n          <input type='text' id='phone' required ref={phoneInputRef}/>\r\n        </div>}\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\r\n          <button\r\n            type='button'\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? 'Create new account' : 'Login with existing account'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}