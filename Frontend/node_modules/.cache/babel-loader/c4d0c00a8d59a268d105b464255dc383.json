{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jordan\\\\shokart\\\\src\\\\components\\\\login\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContext from '../../store/auth-context';\nimport classes from \"./AuthForm.module.css\";\nimport { useHistory } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const usernameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const firstNameInputRef = useRef();\n  const lastNameInputRef = useRef();\n  const houseInputRef = useRef();\n  const streetInputRef = useRef();\n  const cityInputRef = useRef();\n  const stateInputRef = useRef();\n  const pincodeInputRef = useRef();\n  const phoneInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredUsername = usernameInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    if (isLogin) {\n      fetch(\"http://localhost:8080/api/users/login\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: enteredUsername,\n          password: enteredPassword\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          alert(\"username and password incorrect.\");\n        }\n      }).then(data => {\n        authCtx.login(data);\n        console.log(data.street);\n      });\n    } else {\n      const enteredFirstName = firstNameInputRef.current.value;\n      const enteredLastName = lastNameInputRef.current.value;\n      const enteredHouse = houseInputRef.current.value;\n      const enteredStreet = streetInputRef.current.value;\n      const enteredCity = cityInputRef.current.value;\n      const enteredState = stateInputRef.current.value;\n      const enteredPincode = pincodeInputRef.current.value;\n      const enteredPhone = phoneInputRef.current.value;\n      fetch(\"http://localhost:8080/api/users\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: enteredUsername,\n          password: enteredPassword,\n          firstName: enteredFirstName,\n          lastName: enteredLastName,\n          houseNo: enteredHouse,\n          street: enteredStreet,\n          city: enteredCity,\n          state: enteredState,\n          pincode: enteredPincode,\n          phone: enteredPhone,\n          role: \"customer\"\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          alert(\"Successfully Registered\");\n        } else {\n          alert(\"username already exists\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.back,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            required: true,\n            ref: usernameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstname\",\n            required: true,\n            ref: firstNameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastname\",\n            required: true,\n            ref: lastNameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"house\",\n            children: \"House Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"house\",\n            required: true,\n            ref: houseInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"street\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"street\",\n            required: true,\n            ref: streetInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"city\",\n            required: true,\n            ref: cityInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"state\",\n            required: true,\n            ref: stateInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pincode\",\n            children: \"Pincode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pincode\",\n            required: true,\n            ref: pincodeInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"phone\",\n            required: true,\n            ref: phoneInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: isLogin ? \"Login\" : \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.toggle,\n            onClick: switchAuthModeHandler,\n            children: isLogin ? \"Create new account\" : \"Login with existing account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"canXJSPYd1v2nlC/EdIa1jNbuUo=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Jordan/shokart/src/components/login/AuthForm.js"],"names":["useState","useRef","useContext","AuthContext","classes","useHistory","AuthForm","usernameInputRef","passwordInputRef","firstNameInputRef","lastNameInputRef","houseInputRef","streetInputRef","cityInputRef","stateInputRef","pincodeInputRef","phoneInputRef","authCtx","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredUsername","current","value","enteredPassword","fetch","method","mode","body","JSON","stringify","username","password","headers","then","res","ok","json","alert","data","login","console","log","street","enteredFirstName","enteredLastName","enteredHouse","enteredStreet","enteredCity","enteredState","enteredPincode","enteredPhone","firstName","lastName","houseNo","city","state","pincode","phone","role","back","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from \"./AuthForm.module.css\";\r\nimport { useHistory } from \"react\";\r\nconst AuthForm = () => {\r\n  const usernameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const firstNameInputRef = useRef();\r\n  const lastNameInputRef = useRef();\r\n  const houseInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const stateInputRef = useRef();\r\n  const pincodeInputRef = useRef();\r\n  const phoneInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredUsername = usernameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    // optional: Add validation\r\n\r\n    if (isLogin) {\r\n      fetch(\"http://localhost:8080/api/users/login\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify({\r\n          username: enteredUsername,\r\n          password: enteredPassword,\r\n        }),\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          } else {\r\n            alert(\"username and password incorrect.\")\r\n          }\r\n        })\r\n        .then((data) => {\r\n          authCtx.login(data);\r\n          console.log(data.street);\r\n        });\r\n    } else {\r\n      const enteredFirstName = firstNameInputRef.current.value;\r\n      const enteredLastName = lastNameInputRef.current.value;\r\n      const enteredHouse = houseInputRef.current.value;\r\n      const enteredStreet = streetInputRef.current.value;\r\n      const enteredCity = cityInputRef.current.value;\r\n      const enteredState = stateInputRef.current.value;\r\n      const enteredPincode = pincodeInputRef.current.value;\r\n      const enteredPhone = phoneInputRef.current.value;\r\n      fetch(\"http://localhost:8080/api/users\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify({\r\n          username: enteredUsername,\r\n          password: enteredPassword,\r\n          firstName: enteredFirstName,\r\n          lastName: enteredLastName,\r\n          houseNo: enteredHouse,\r\n          street: enteredStreet,\r\n          city: enteredCity,\r\n          state: enteredState,\r\n          pincode: enteredPincode,\r\n          phone: enteredPhone,\r\n          role: \"customer\",\r\n        }),\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          alert(\"Successfully Registered\");\r\n        } else {\r\n        alert(\"username already exists\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.back}>\r\n      <section className={classes.auth}>\r\n        <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n        <form onSubmit={submitHandler}>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"email\">Username</label>\r\n            <input type=\"text\" id=\"email\" required ref={usernameInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={passwordInputRef}\r\n            />\r\n          </div>\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"firstname\">First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"firstname\"\r\n                required\r\n                ref={firstNameInputRef}\r\n              />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"lastname\">Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"lastname\"\r\n                required\r\n                ref={lastNameInputRef}\r\n              />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"house\">House Number</label>\r\n              <input type=\"text\" id=\"house\" required ref={houseInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"street\">Street</label>\r\n              <input type=\"text\" id=\"street\" required ref={streetInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"city\">City</label>\r\n              <input type=\"text\" id=\"city\" required ref={cityInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"state\">State</label>\r\n              <input type=\"text\" id=\"state\" required ref={stateInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"pincode\">Pincode</label>\r\n              <input type=\"text\" id=\"pincode\" required ref={pincodeInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input type=\"text\" id=\"phone\" required ref={phoneInputRef} />\r\n            </div>\r\n          )}\r\n          <div className={classes.actions}>\r\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n            <button\r\n              type=\"button\"\r\n              className={classes.toggle}\r\n              onClick={switchAuthModeHandler}\r\n            >\r\n              {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}