{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jordan\\\\shokart\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  user: {},\n  isLoggedIn: false,\n  login: () => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  //const initialToken = localStorage.getItem('token');\n  const [isLoggedIn, setIsLoggedIn] = useState(fa);\n  const [user, setUser] = useState([]);\n\n  const loginHandler = user => {\n    setUser(user); //localStorage.setItem('token',1);\n\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    setUser([]); //localStorage.removeItem('token');\n  };\n\n  const contextValue = {\n    user: user,\n    isLoggedIn: isLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"e84LOpu3NflLejUqUZXYh20JUy4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Jordan/shokart/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","user","isLoggedIn","login","logout","AuthContextProvider","props","setIsLoggedIn","fa","setUser","loginHandler","logoutHandler","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,IAAI,EAAE,EADgC;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAE,MAAM,CAAE,CAHuB;AAItCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C;AAEA,QAAM,CAACJ,UAAD,EAAaK,aAAb,IAA8BT,QAAQ,CAACU,EAAD,CAA5C;AACA,QAAM,CAACP,IAAD,EAAOQ,OAAP,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMY,YAAY,GAAIT,IAAD,IAAU;AAE7BQ,IAAAA,OAAO,CAACR,IAAD,CAAP,CAF6B,CAG7B;;AACAM,IAAAA,aAAa,CAAC,IAAD,CAAb;AAED,GAND;;AAQA,QAAMI,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP,CAF0B,CAG1B;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAG;AACnBX,IAAAA,IAAI,EAAEA,IADa;AAEnBC,IAAAA,UAAU,EAAEA,UAFO;AAGnBC,IAAAA,KAAK,EAAEO,YAHY;AAInBN,IAAAA,MAAM,EAAEO;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cACGN,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCM;;GAAMR,mB;;KAAAA,mB;AAkCb,eAAeN,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  user: {},\r\n  isLoggedIn: false,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  //const initialToken = localStorage.getItem('token');\r\n  \r\n  const [isLoggedIn, setIsLoggedIn] = useState(fa);\r\n  const [user, setUser]=useState([]);\r\n\r\n  const loginHandler = (user) => {\r\n    \r\n    setUser(user);\r\n    //localStorage.setItem('token',1);\r\n    setIsLoggedIn(true);\r\n    \r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setIsLoggedIn(false);\r\n    setUser([]);\r\n    //localStorage.removeItem('token');\r\n  };\r\n\r\n  const contextValue = {\r\n    user: user,\r\n    isLoggedIn: isLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}