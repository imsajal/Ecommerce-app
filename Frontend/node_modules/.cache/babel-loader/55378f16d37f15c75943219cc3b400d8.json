{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jordan\\\\shokart\\\\src\\\\components\\\\Orders\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport AuthContext from \"../../store/auth-context\";\nimport Card from \"../UI/Card\";\nimport OrderItem from \"./OrderItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchOrder, setSearchOrder] = useState('');\n  const [statusChanged, setStatusChanged] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  const changeStatusHandler = () => {\n    setStatusChanged(true);\n  };\n\n  const searchHandler = event => {\n    setSearch(event.target.value);\n  };\n\n  const searchOrderHandler = event => {\n    setSearchOrder(event.target.value);\n  };\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const response = await fetch(\"http://localhost:8080/api/orders/myorders\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: authCtx.user.username,\n          password: authCtx.user.password\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      setOrders(responseData);\n    };\n\n    fetchOrders();\n    setStatusChanged(false);\n  }, [statusChanged]);\n  const filteredOrders = search.length === 0 ? orders : orders.filter(order => order.status.toLowerCase().includes(search.toLowerCase()));\n  const OrdersList = filteredOrders.map(order => /*#__PURE__*/_jsxDEV(OrderItem, {\n    search: search,\n    change: changeStatusHandler,\n    id: order.id,\n    username: order.username,\n    productId: order.productId,\n    quantity: order.quantity,\n    status: order.status\n  }, order.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.button,\n      placeholder: \"Type order status...\",\n      type: \"text\",\n      value: search,\n      onChange: searchHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: OrdersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"eg3SoKuF8PPhf8Pb5VUbSYZi5JU=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Jordan/shokart/src/components/Orders/Orders.js"],"names":["AuthContext","Card","OrderItem","classes","useEffect","useState","useContext","Orders","orders","setOrders","search","setSearch","searchOrder","setSearchOrder","statusChanged","setStatusChanged","authCtx","changeStatusHandler","searchHandler","event","target","value","searchOrderHandler","fetchOrders","response","fetch","method","mode","body","JSON","stringify","username","user","password","headers","responseData","json","console","log","filteredOrders","length","filter","order","status","toLowerCase","includes","OrdersList","map","id","productId","quantity","meals","button"],"mappings":"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","sourcesContent":["import AuthContext from \"../../store/auth-context\";\r\nimport Card from \"../UI/Card\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [searchOrder, setSearchOrder] = useState('');\r\n  const [statusChanged, setStatusChanged] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n  const changeStatusHandler = () => {\r\n    setStatusChanged(true);\r\n  };\r\n  const searchHandler = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const searchOrderHandler = (event) => {\r\n    setSearchOrder(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/api/orders/myorders\",\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          body: JSON.stringify({\r\n            username: authCtx.user.username,\r\n            password: authCtx.user.password,\r\n          }),\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      setOrders(responseData);\r\n    };\r\n    fetchOrders();\r\n    setStatusChanged(false);\r\n  }, [statusChanged]);\r\n  const filteredOrders =  search.length === 0 ? orders : orders.filter(\r\n    (order) => order.status.toLowerCase().includes(search.toLowerCase()) \r\n  );\r\n \r\n  const OrdersList = filteredOrders.map((order) => (\r\n    <OrderItem\r\n      search={search}\r\n      change={changeStatusHandler}\r\n      key={order.id}\r\n      id={order.id}\r\n      username={order.username}\r\n      productId={order.productId}\r\n      quantity={order.quantity}\r\n      status={order.status}\r\n    />\r\n  ));\r\n  \r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <input className={classes.button} placeholder=\"Type order status...\" type=\"text\" value={search} onChange={searchHandler} />\r\n      \r\n      \r\n      <Card>\r\n        <ul>{OrdersList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"]},"metadata":{},"sourceType":"module"}