{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jordan\\\\shokart\\\\src\\\\components\\\\Orders\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport AuthContext from \"../../store/auth-context\";\nimport Card from \"../UI/Card\";\nimport OrderItem from \"./OrderItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [search, setSearch] = useState(null);\n  const [statusChanged, setStatusChanged] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  const changeStatusHandler = () => {\n    setStatusChanged(true);\n  };\n\n  const searchHandler = event => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const response = await fetch(\"http://localhost:8080/api/orders/myorders\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: authCtx.user.username,\n          password: authCtx.user.password\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      setOrders(responseData);\n    };\n\n    fetchOrders();\n    setStatusChanged(false);\n  }, [statusChanged]);\n  const searchedOrders = orders.filter(order => order.status == search);\n  const newOrders = orders;\n\n  if (search !== 'null') {\n    newOrders = sear5;\n  }\n\n  const OrdersList = searchedOrders.map(order => /*#__PURE__*/_jsxDEV(OrderItem, {\n    search: search,\n    change: changeStatusHandler,\n    id: order.id,\n    username: order.username,\n    productId: order.productId,\n    quantity: order.quantity,\n    status: order.status\n  }, order.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: searchHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: OrdersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"dmnE3uU/9w80kSyNCT4qQKz4gBg=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Jordan/shokart/src/components/Orders/Orders.js"],"names":["AuthContext","Card","OrderItem","classes","useEffect","useState","useContext","Orders","orders","setOrders","search","setSearch","statusChanged","setStatusChanged","authCtx","changeStatusHandler","searchHandler","event","target","value","fetchOrders","response","fetch","method","mode","body","JSON","stringify","username","user","password","headers","responseData","json","console","log","searchedOrders","filter","order","status","newOrders","sear5","OrdersList","map","id","productId","quantity","meals"],"mappings":"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","sourcesContent":["import AuthContext from \"../../store/auth-context\";\r\nimport Card from \"../UI/Card\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [search, setSearch] = useState(null);\r\n  const [statusChanged, setStatusChanged] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n  const changeStatusHandler = () => {\r\n    setStatusChanged(true);\r\n  };\r\n  const searchHandler = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/api/orders/myorders\",\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          body: JSON.stringify({\r\n            username: authCtx.user.username,\r\n            password: authCtx.user.password,\r\n          }),\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      setOrders(responseData);\r\n    };\r\n    fetchOrders();\r\n    setStatusChanged(false);\r\n  }, [statusChanged]);\r\n  const searchedOrders = orders.filter(\r\n    (order) => order.status == search\r\n  );\r\n  const newOrders = orders;\r\n  if(search !=='null'){\r\n   newOrders=sear5\r\n  }\r\n  const OrdersList = searchedOrders.map((order) => (\r\n    <OrderItem\r\n      search={search}\r\n      change={changeStatusHandler}\r\n      key={order.id}\r\n      id={order.id}\r\n      username={order.username}\r\n      productId={order.productId}\r\n      quantity={order.quantity}\r\n      status={order.status}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <input type=\"text\" onChange={searchHandler} />\r\n      <Card>\r\n        <ul>{OrdersList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"]},"metadata":{},"sourceType":"module"}