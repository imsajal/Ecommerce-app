{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jordan\\\\shokart\\\\src\\\\components\\\\login\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport Modal from \"../UI/Modal\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const usernameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const firstNameInputRef = useRef();\n  const lastNameInputRef = useRef();\n  const houseInputRef = useRef();\n  const streetInputRef = useRef();\n  const cityInputRef = useRef();\n  const stateInputRef = useRef();\n  const pincodeInputRef = useRef();\n  const phoneInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [showCustomMessage, setCustomMessage] = useState(false);\n  const [registered, setRegistered] = useState(false);\n\n  const showModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const hideModalHandler = () => {\n    setShowModal(false);\n    setRegistered(false);\n    setCustomMessage(false);\n  };\n\n  const registrationHandler = () => {\n    setShowModal(true);\n    setIsLogin(prevState => !prevState);\n    setCustomMessage(true);\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredUsername = usernameInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    if (isLogin) {\n      fetch(\"http://localhost:8080/api/users/login\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: enteredUsername,\n          password: enteredPassword\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          res.json().then(data => {\n            console.log(data);\n            authCtx.login(data);\n            const role = data.role;\n\n            if (role === \"customer\") {\n              history.replace(\"/customer\");\n            } else {\n              history.replace(\"/admin\");\n            }\n          });\n        } else {\n          setShowModal(true);\n        }\n      });\n    } else {\n      const enteredFirstName = firstNameInputRef.current.value;\n      const enteredLastName = lastNameInputRef.current.value;\n      const enteredHouse = houseInputRef.current.value;\n      const enteredStreet = streetInputRef.current.value;\n      const enteredCity = cityInputRef.current.value;\n      const enteredState = stateInputRef.current.value;\n      const enteredPincode = pincodeInputRef.current.value;\n      const enteredPhone = phoneInputRef.current.value;\n      fetch(\"http://localhost:8080/api/users\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          username: enteredUsername,\n          password: enteredPassword,\n          firstName: enteredFirstName,\n          lastName: enteredLastName,\n          houseNo: enteredHouse,\n          street: enteredStreet,\n          city: enteredCity,\n          state: enteredState,\n          pincode: enteredPincode,\n          phone: enteredPhone,\n          role: \"customer\"\n        }),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          setShowModal(true);\n          setRegistered(true);\n        } else {\n          setShowModal(true);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.back,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: [showModal && /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: hideModalHandler,\n        children: [isLogin && showCustomMessage && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.h3,\n          children: \"Successfully Registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 44\n        }, this), isLogin && !showCustomMessage && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.h3,\n          children: \"Username and password incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 45\n        }, this), !isLogin && !registered && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.h3,\n          children: \"Username already exists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 39\n        }, this), !isLogin && registered && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.h3,\n          children: \"Successfully registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 38\n        }, this) && registrationHandler(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: hideModalHandler,\n          className: classes.button,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"* indicates madatory fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.required,\n            htmlFor: \"email\",\n            children: [\"Username\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            required: true,\n            ref: usernameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.required,\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstname\",\n            ref: firstNameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastname\",\n            ref: lastNameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.required,\n            htmlFor: \"house\",\n            children: \"House Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"house\",\n            required: true,\n            ref: houseInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.required,\n            htmlFor: \"street\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"street\",\n            required: true,\n            ref: streetInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.required,\n            htmlFor: \"city\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"city\",\n            required: true,\n            ref: cityInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.required,\n            htmlFor: \"state\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"state\",\n            required: true,\n            ref: stateInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.required,\n            htmlFor: \"pincode\",\n            children: \"Pincode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pincode\",\n            required: true,\n            ref: pincodeInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.required,\n            htmlFor: \"phone\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"phone\",\n            required: true,\n            ref: phoneInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: isLogin ? \"Login\" : \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.toggle,\n            onClick: switchAuthModeHandler,\n            children: isLogin ? \"Create new account\" : \"Login with existing account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"MS/mMKObOk45qvqxHmuisRYi8I4=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Jordan/shokart/src/components/login/AuthForm.js"],"names":["useState","useRef","useContext","AuthContext","classes","Modal","useHistory","AuthForm","usernameInputRef","passwordInputRef","firstNameInputRef","lastNameInputRef","houseInputRef","streetInputRef","cityInputRef","stateInputRef","pincodeInputRef","phoneInputRef","authCtx","history","isLogin","setIsLogin","showModal","setShowModal","showCustomMessage","setCustomMessage","registered","setRegistered","showModalHandler","hideModalHandler","registrationHandler","prevState","switchAuthModeHandler","submitHandler","event","preventDefault","enteredUsername","current","value","enteredPassword","fetch","method","mode","body","JSON","stringify","username","password","headers","then","res","ok","json","data","console","log","login","role","replace","enteredFirstName","enteredLastName","enteredHouse","enteredStreet","enteredCity","enteredState","enteredPincode","enteredPhone","firstName","lastName","houseNo","street","city","state","pincode","phone","back","auth","h3","button","control","required","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AuthForm.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst AuthForm = () => {\r\n  const usernameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const firstNameInputRef = useRef();\r\n  const lastNameInputRef = useRef();\r\n  const houseInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const stateInputRef = useRef();\r\n  const pincodeInputRef = useRef();\r\n  const phoneInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showCustomMessage, setCustomMessage] = useState(false);\r\n  const [registered, setRegistered] = useState(false);\r\n\r\n  const showModalHandler = () => {\r\n    setShowModal(true);\r\n  };\r\n  const hideModalHandler = () => {\r\n    setShowModal(false);\r\n    setRegistered(false);\r\n    setCustomMessage(false);\r\n  };\r\n\r\n  const registrationHandler = () => {\r\n    setShowModal(true);\r\n    setIsLogin((prevState) => !prevState);\r\n    setCustomMessage(true);\r\n  };\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredUsername = usernameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    // optional: Add validation\r\n\r\n    if (isLogin) {\r\n      fetch(\"http://localhost:8080/api/users/login\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify({\r\n          username: enteredUsername,\r\n          password: enteredPassword,\r\n        }),\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          res.json().then((data) => {\r\n            console.log(data);\r\n            authCtx.login(data);\r\n            const role = data.role;\r\n            if (role === \"customer\") {\r\n              history.replace(\"/customer\");\r\n            } else {\r\n              history.replace(\"/admin\");\r\n            }\r\n          });\r\n        } else {\r\n          setShowModal(true);\r\n        }\r\n      });\r\n    } else {\r\n      const enteredFirstName = firstNameInputRef.current.value;\r\n      const enteredLastName = lastNameInputRef.current.value;\r\n      const enteredHouse = houseInputRef.current.value;\r\n      const enteredStreet = streetInputRef.current.value;\r\n      const enteredCity = cityInputRef.current.value;\r\n      const enteredState = stateInputRef.current.value;\r\n      const enteredPincode = pincodeInputRef.current.value;\r\n      const enteredPhone = phoneInputRef.current.value;\r\n      fetch(\"http://localhost:8080/api/users\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify({\r\n          username: enteredUsername,\r\n          password: enteredPassword,\r\n          firstName: enteredFirstName,\r\n          lastName: enteredLastName,\r\n          houseNo: enteredHouse,\r\n          street: enteredStreet,\r\n          city: enteredCity,\r\n          state: enteredState,\r\n          pincode: enteredPincode,\r\n          phone: enteredPhone,\r\n          role: \"customer\",\r\n        }),\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          setShowModal(true);\r\n          setRegistered(true);\r\n        } else {\r\n          setShowModal(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.back}>\r\n      \r\n      <section className={classes.auth}>\r\n      {showModal && (\r\n        <Modal onClose={hideModalHandler}>\r\n          {isLogin && showCustomMessage && <h3 className={classes.h3}>Successfully Registered</h3>}\r\n          {isLogin && !showCustomMessage && <h3 className={classes.h3}>Username and password incorrect</h3>}\r\n          {!isLogin && !registered && <h3  className={classes.h3}>Username already exists</h3>}\r\n          {!isLogin && registered && <h3  className={classes.h3}>Successfully registered</h3> && registrationHandler() }\r\n          <button onClick={hideModalHandler} className={classes.button}>\r\n            OK\r\n          </button>\r\n        </Modal>\r\n      )}\r\n        <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n        <h3>* indicates madatory fields</h3>\r\n        <form onSubmit={submitHandler}>\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"email\">\r\n              Username{\" \"}\r\n            </label>\r\n            <input type=\"text\" id=\"email\" required ref={usernameInputRef} />\r\n          </div>\r\n\r\n          <div className={classes.control}>\r\n            <label className={classes.required} htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={passwordInputRef}\r\n            />\r\n          </div>\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"firstname\">First Name</label>\r\n              <input type=\"text\" id=\"firstname\" ref={firstNameInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"lastname\">Last Name</label>\r\n              <input type=\"text\" id=\"lastname\" ref={lastNameInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"house\">\r\n                House Number\r\n              </label>\r\n              <input type=\"text\" id=\"house\" required ref={houseInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"street\">\r\n                Street\r\n              </label>\r\n              <input type=\"text\" id=\"street\" required ref={streetInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"city\">\r\n                City\r\n              </label>\r\n              <input type=\"text\" id=\"city\" required ref={cityInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"state\">\r\n                State\r\n              </label>\r\n              <input type=\"text\" id=\"state\" required ref={stateInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"pincode\">\r\n                Pincode\r\n              </label>\r\n              <input type=\"text\" id=\"pincode\" required ref={pincodeInputRef} />\r\n            </div>\r\n          )}\r\n          {!isLogin && (\r\n            <div className={classes.control}>\r\n              <label className={classes.required} htmlFor=\"phone\">\r\n                Phone\r\n              </label>\r\n              <input type=\"text\" id=\"phone\" required ref={phoneInputRef} />\r\n            </div>\r\n          )}\r\n          <div className={classes.actions}>\r\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n            <button\r\n              type=\"button\"\r\n              className={classes.toggle}\r\n              onClick={switchAuthModeHandler}\r\n            >\r\n              {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}